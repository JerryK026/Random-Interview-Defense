Q1 네트워크 소켓이란, 응용 프로그램이 전송 계층에 접근할 수 있도록 파일 형식으로 추상화한 인터페이스입니다. 네트워크로 연결된 컴퓨터(호스트) 간 통신하기 위해 필요합니다.
Q2 CPU 부하의 경우 서버를 추가하고 로드 밸런서로 부하를 균등하게 분산해 비교적 간단하게 해결할 수 있습니다. 그러나 I/O 부하의 경우 입출력 요청을 여러 기기에서 사용하기 때문에 동시성에 대한 고려가 추가적으로 필요합니다.
Q3 언급하신 키워드는 모두 DNS 레코드 종류들입니다. DNS 레코드들은 DNS 서버가 해당 패킷을 받았을 때 도메인 이름을 IP로 매핑하기 위해 처리할 방법에 대해 지침합니다. 그 중 A 레코드는 IPv4 주소를 가진 호스트를 찾기 위해 사용됩니다. CNAME 레코드는 한 도메인에 alias를 부여해 다양한 도메인으로 접근할 수 있도록 할 때 사용됩니다. MX 레코드는 수신할 메일의 메일 서버를 찾기 위해 사용됩니다. 언급하신 키워드 외에도 AAAA레코드, NS 레코드, SOA 레코드, PTR 레코드, TXT 레코드, SRV 레코드 등이 있습니다
Q4 이진트리의 경우 노드 값에 의한 재정렬을 하지 않기 때문에 최악의 경우 선형 탐색 O(N)의 성능을 가집니다. 그러나 B트리 종류 갱신작업 이후로 트리 구조가 변하기 때문에 O(logN)의 검색 속도를 보장합니다. 또한 B트리는 노드 당 데이터 수를 변경할 수 있어 각 노드의 크기를 4KB로 설정해 노드 당 1개의 블록 만큼을 할당하면 트리 탐색할 때 인근을 검색하므로 랜덤 읽기가 아닌 순차 읽기 형태로 디스크를 읽을 수 있습니다.
Q5 NL(Nested Loop), Sort-Merge, Hash입니다. NL은 이중 for문 처럼 두 개의 테이블 row를 각각 확인해 조인하는 방법입니다. 인덱스가 있을 때와 선행테이블 크기가 작을 때 유리합니다. Sort-Merge는 조건에 맞는 행을 찾아 정렬한 뒤 비교하는 방식입니다. Hash는 해시값으로 필터링 후 실제 값을 비교하는 방식입니다. 참고 : https://hoon93.tistory.com/46
Q6 프로세스는 기본적으로 메모리에 올라와 있는 정보만 이용할 수 있습니다. 그러나 메모리는 휘발성 영역이기 때문에 컴퓨터 전원을 껐다가 켰을 경우 캐싱되어 있는 데이터가 없기 때문에 디스크로부터 필요한 읽기 작업을 수행한 후에 일정한 성능을 얻을 수 있습니다.
Q7 Read Committed 수준은 Oracle에서 기본으로 사용되며, 아직 커밋되지 않은 트랜잭션에서 수정한 데이터를 읽을 수 있는 "Dirty Read" 문제를 해결합니다. 그러나 다른 트랜잭션에서 수정하고 커밋 완료한 경우 현재 트랜잭션에서 다시 읽은 값이 달라질 수 있는 "Non-Repeatable Read"라는 문제가 발생합니다. Repeatable Read 격리 수준은 MySQL의 InnoDB에서 기본으로 사용되며, 트랜잭션 마다 버전을 기입해서 현재 트랜잭션보다 낮은 버전의 데이터만 보게 해 Non-Repeatable Read 문제를 해결합니다. 그러나 쓰기 잠금을 거는 경우 다른 트랜잭션에 의해 수정된 레코드가 보이기도 하는 "Phantom Read"라는 현상을 겪을 수도 있습니다.
Q8 InnoDB는 레코드 단위의 인덱스 레코드 락을 제공하는데 이때 갭 락을 사용합니다. 갭 락은 목적 레코드 사이에 모두 읽기 잠금을 걸기 때문에 쓰기 작업을 수행할 수 없어 Phantom Read 현상이 발생하지 않습니다. 별개로, 갭 락은 데드락 현상의 주원인이기도 하므로 가능한 줄이는 것이 좋습니다.
Q9 애플리케이션 프로세스에서 Socket에 "Stream" 데이터를 쓰기 작업해 전송 계층으로 보냅니다. 전송 계층에서는 Stream 데이터를 MSS(Maximum Segment Size)를 기준으로 잘라 "Segment"로 만들어 Network 계층으로 보냅니다. 이 행위를 Segmentation이라 부릅니다. Network 계층에서 Segment를 인터넷으로 전송 가능한 형태의 default 1500 byte인 "Packet"으로 만들어 데이터 링크 계층으로 보냅니다. 데이터 링크 계층에서는 패킷을 "Frame"으로 "Encapsulation"해 인터넷으로 전송합니다. 참고 : https://www.youtube.com/watch?v=p6ASAAMwgd8